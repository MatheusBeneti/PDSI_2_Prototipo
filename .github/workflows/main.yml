name: Build and Deploy

on:
  push:
  pull_request:

jobs:
  job1:
    runs-on: ubuntu-latest
    environment: db

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: mydatabase
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U user -h localhost" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.12.4"

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install dependencies
        run: pip install -r Backend/requirements.txt

      - name: Wait for PostgreSQL
        run: |
          for i in {1..20}; do
            PGPASSWORD=password psql -h localhost -U user -d mydatabase -c "SELECT 1" && echo "PostgreSQL estÃ¡ pronto!" && break
            echo "Esperando pelo PostgreSQL..."
            sleep 5
          done

      - name: Check PostgreSQL status
        run: PGPASSWORD=password psql -h localhost -U user -d mydatabase -c "SELECT 1"

      - name: Create .env file in Backend
        run: |
          echo "DATABASE_USER=${{ vars.DATABASE_USER }}" >> Backend/.env
          echo "DATABASE_PASSWORD=${{ vars.DATABASE_PASSWORD }}" >> Backend/.env
          echo "DATABASE_NAME=${{ vars.DATABASE_NAME }}" >> Backend/.env
          echo "DATABASE_HOST=localhost" >> Backend/.env

      - name: Run pytest
        run: pytest Backend/teste.py
